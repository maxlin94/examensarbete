// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String       @id @default(cuid())
  name        String
  email       String       @unique
  password    String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  friends     FriendShip[] @relation("UserFriends")
  asFriend    FriendShip[] @relation("UserAsFriend")
  sentMessages   Message[] @relation("SenderMessages")
  receivedMessages Message[] @relation("ReceiverMessages")
}

model FriendShip {
  id        String   @id @default(cuid())
  user      User     @relation("UserFriends", fields: [userId], references: [id])
  userId    String
  friend    User     @relation("UserAsFriend", fields: [friendId], references: [id])
  friendId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@unique([userId, friendId])
}

model Message {
  id          String   @id @default(cuid())
  content     String
  sender      User     @relation("SenderMessages", fields: [senderId], references: [id])
  senderId    String
  receiver    User     @relation("ReceiverMessages", fields: [receiverId], references: [id])
  receiverId  String
  createdAt   DateTime @default(now())
  @@index([senderId, receiverId, createdAt])
}